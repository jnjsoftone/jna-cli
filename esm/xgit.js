#!/usr/bin/env node
var e;let o,i;import{Octokit as r}from"@octokit/rest";import s from"yargs";import{loadJson as t}from"jnu-abc";import{readJsonFromGithub as a}from"jnu-cloud";import{findAllRepos as n,createRemoteRepo as p,setLocalConfig as c,cloneRepo as m,initLocalRepo as l,deleteRemoteRepo as d,initRepo as N,copyRepo as u,pushRepo as R,makeRepo as g,removeRepo as v}from"./git.js";import{getCurrentDir as b}from"./cli.js";let f=s.usage("Usage: -e <exec> -u <userName> -n <repoName> -d <description> -p <isPrivate>").option("e",{alias:"exec",default:"copyRepo",describe:"exec command copyRepo(clone+local config)/makeRepo(create remote+push)/removeRepo(delete remote+local)",type:"string",demandOption:!0}).option("u",{alias:"userName",default:"mooninlearn",describe:"Name of User",type:"string"}).option("n",{alias:"repoName",describe:"NameOfRepository",type:"string"}).option("p",{alias:"isPrivate",default:!1,describe:"Private Repository",type:"boolean"}).option("s",{alias:"src",default:"local",describe:"Source of Github Account",type:"string"}).option("d",{alias:"description",describe:"Description For Repository",type:"string"}).argv,E=async(e,o="github")=>{if("local"===o){let o=process.env.DEV_ROOT?`${process.env.DEV_ROOT}/jd-environments`:"C:/JnJ/Developments/jd-environments";return t(`${o}/Apis/github.json`)[e]}if("github"===o){console.log(`#### ENV_GITHUB_OWNER: ${process.env.ENV_GITHUB_OWNER}`),console.log(`#### ENV_GITHUB_REPO: ${process.env.ENV_GITHUB_REPO}`),console.log(`#### ENV_GITHUB_TOKEN: ${process.env.ENV_GITHUB_TOKEN}`);let o={owner:process.env.ENV_GITHUB_OWNER||"",repo:process.env.ENV_GITHUB_REPO||"",token:process.env.ENV_GITHUB_TOKEN||""},i=await a("Apis/github.json",o);return console.log(`@@@@ readJsonFromGithub: ${JSON.stringify(i)}`),i[e]}},_=await E(f.userName??"","github");_.userName=f.userName??"",console.log(`#### git account: ${JSON.stringify(_)}`);let y=new r({auth:_.token}),O=(e=f.repoName??"",(i=b()).split("/").pop()!==e&&(i+=`/${e}`),i??"");switch(f.exec){case"listRepos":(async()=>{try{o=await n(y),console.log(JSON.stringify(o,null,2))}catch(e){console.error("저장소 목록 조회 중 오류 발생:",e)}})();break;case"createRemoteRepo":console.log(`createRemoteRepo: ${f}`),p(y,{name:f.repoName??"",description:f.description??"",isPrivate:f.isPrivate??!1});break;case"deleteRemoteRepo":d(y,{name:f.repoName??""},_);break;case"setLocalConfig":c({name:f.repoName??"",description:f.description??""},_,O);break;case"cloneRepo":m({name:f.repoName??"",description:f.description??""},_,O);break;case"initLocalRepo":l({name:f.repoName??"",description:f.description??""},_,O);break;case"initRepo":console.log("====initRepo"),N(y,{name:f.repoName??"",description:f.description??"",isPrivate:f.isPrivate??!1},_,O);break;case"pushRepo":R({name:f.repoName??"",description:f.description??""},_,O);break;case"copyRepo":u({name:f.repoName??"",description:f.description??"description",isPrivate:f.isPrivate??!1},_,O);break;case"makeRepo":g(y,{name:f.repoName??"",description:f.description??"",isPrivate:f.isPrivate??!1},_,O);break;case"removeRepo":v(y,{name:f.repoName??""},_,O)}