#!/usr/bin/env node
var e;let o,i;import{Octokit as r}from"@octokit/rest";import a from"yargs";import{findAllRepos as t,findGithubAccount as s,createRemoteRepo as p,setLocalConfig as c,cloneRepo as n,initLocalRepo as m,deleteRemoteRepo as l,initRepo as d,copyRepo as u,pushRepo as N,makeRepo as R,removeRepo as b}from"./git.js";import{getCurrentDir as g}from"./cli.js";let y=a.usage("Usage: -e <exec> -u <userName> -n <repoName> -d <description> -p <isPrivate>").option("e",{alias:"exec",default:"copyRepo",describe:"exec command copyRepo(clone+local config)/makeRepo(create remote+push)/removeRepo(delete remote+local)",type:"string",demandOption:!0}).option("u",{alias:"userName",default:"mooninlearn",describe:"Name of User",type:"string"}).option("n",{alias:"repoName",describe:"NameOfRepository",type:"string"}).option("p",{alias:"isPrivate",default:!1,describe:"Private Repository",type:"boolean"}).option("s",{alias:"src",default:"local",describe:"Source of Github Account",type:"string"}).option("d",{alias:"description",describe:"Description For Repository",type:"string"}).argv,v=s(y.userName??"","github");v.userName=y.userName??"",console.log(`#### git account: ${JSON.stringify(v)}`);let f=new r({auth:v.token}),k=(e=y.repoName??"",(i=g()).split("/").pop()!==e&&(i+=`/${e}`),i??"");switch(y.exec){case"listRepos":(async()=>{try{o=await t(f),console.log(JSON.stringify(o,null,2))}catch(e){console.error("저장소 목록 조회 중 오류 발생:",e)}})();break;case"createRemoteRepo":console.log(`createRemoteRepo: ${y}`),p(f,{name:y.repoName??"",description:y.description??"",isPrivate:y.isPrivate??!1});break;case"deleteRemoteRepo":l(f,{name:y.repoName??""},v);break;case"setLocalConfig":c({name:y.repoName??"",description:y.description??""},v,k);break;case"cloneRepo":n({name:y.repoName??"",description:y.description??""},v,k);break;case"initLocalRepo":m({name:y.repoName??"",description:y.description??""},v,k);break;case"initRepo":console.log("====initRepo"),d(f,{name:y.repoName??"",description:y.description??"",isPrivate:y.isPrivate??!1},v,k);break;case"pushRepo":N({name:y.repoName??"",description:y.description??""},v,k);break;case"copyRepo":u({name:y.repoName??"",description:y.description??"description",isPrivate:y.isPrivate??!1},v,k);break;case"makeRepo":R(f,{name:y.repoName??"",description:y.description??"",isPrivate:y.isPrivate??!1},v,k);break;case"removeRepo":b(f,{name:y.repoName??""},v,k)}