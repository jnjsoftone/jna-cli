#!/usr/bin/env node
let e,a,r;import o from"yargs";import{saveJson as t,saveFile as i,findFiles as s,deleteFilesInFolder as n}from"jnu-abc";import{initApp as l,removeApp as c,zip as p,tree as d,unzip as m}from"./cli.js";let u="||",g=`${u}${u}`,$=`${u}${u}`,f=o.usage("Usage: -e <command> -r <required> -o <optional>").option("e",{alias:"exec",describe:"Execute Command",type:"string",demandOption:!0}).option("r",{alias:"requiredParameter",default:"",describe:"Required Parameter",type:"string"}).option("o",{alias:"optionalParameter",default:"{}",describe:"Optional Parameter",type:"string"}).option("s",{alias:"saveOption",default:"",describe:"Save file for result(return)",type:"string"}).parseSync(),b={exec:f.e,requiredParameter:f.r,optionalParameter:f.o,saveOption:f.s},k=(e,a,r=u)=>{let o=a.split(r);return e&&e.split(r).forEach((e,a)=>{e&&(o[a]=e)}),o},v=(e,a,r=u)=>k(e,a,r),O=(e,a,r=`options.json${u}json${u}1`,o=u)=>{let[s,n,l]=k(a,r,o);switch(console.log(`@@@saveOption: ${a}`),n){case"file":i(s,e),l&&console.log(`${e}`);break;case"json":t(s,e),l&&console.log(`${JSON.stringify(e)}`);break;case"sqlite":console.log(`saveSqlite: ${s}, ${e}`),l&&console.log(`${JSON.stringify(e)}`);break;case"":console.log(e?JSON.stringify(e):"작업이 완료되었습니다.");break;default:console.log(`지원하지 않는 저장 타입입니다: ${n}`)}};(async()=>{switch(b.exec){case"init":a=`repoName${u}jnjsoftone${u}node-simple${u}JnJ Utility For Development`,r=v(b.requiredParameter??"",a,u),O(e=await l({template:r[2],repoName:r[0],userName:r[1],description:r[3]}),b.saveOption??"",g);break;case"remove":a=`repoName${u}jnjsoftone`,c({repoName:(r=v(b.requiredParameter??"",a,u))[0],userName:r[1]});break;case"zip":let[o,t]=v(b.requiredParameter??`"${u}node_modules/,package-lock.json,.next/"`,u);console.log(`@@@@ zipFolder: ${o}, zipExcluded: ${t}`),O(e=p(o,t),b.saveOption??"",g);break;case"tree":d(b.requiredParameter??""),O(e,b.saveOption??"",$);break;case"find":let[i,f]=v(b.requiredParameter??`"${u}"`,u);s(i,f),O(e,b.saveOption??"",$);break;case"del":let[k,q]=v(b.requiredParameter??`"${u}node_modules/,package-lock.json,.git/.next/"`,u);O(e=n(k,q,!0)??"",b.saveOption??"",g);break;case"unzip":let[P,j]=v(b.requiredParameter??`"${u}node_modules/,package-lock.json,.git/.next/"`,u);O(e=m(P,j),b.saveOption??"",$);break;default:console.log("Invalid command")}})();