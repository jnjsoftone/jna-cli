#!/usr/bin/env node
"use strict";var e;Object.defineProperty(exports,"__esModule",{value:!0});const o=require("@octokit/rest"),i=(e=require("yargs"))&&e.__esModule?e:{default:e},r=require("jnu-abc"),t=require("jnu-cloud"),s=require("./git.js"),a=require("./cli.js"),n=i.default.usage("Usage: -e <exec> -u <userName> -n <repoName> -d <description> -p <isPrivate>").option("e",{alias:"exec",default:"copyRepo",describe:"exec command copyRepo(clone+local config)/makeRepo(create remote+push)/removeRepo(delete remote+local)",type:"string",demandOption:!0}).option("u",{alias:"userName",default:"mooninlearn",describe:"Name of User",type:"string"}).option("n",{alias:"repoName",describe:"NameOfRepository",type:"string"}).option("p",{alias:"isPrivate",default:!1,describe:"Private Repository",type:"boolean"}).option("s",{alias:"src",default:"local",describe:"Source of Github Account",type:"string"}).option("d",{alias:"description",describe:"Description For Repository",type:"string"}).argv,c=async(e,o="github")=>{if("local"===o){let o=process.env.DEV_ROOT?`${process.env.DEV_ROOT}/jd-environments`:"C:/JnJ/Developments/jd-environments";return(0,r.loadJson)(`${o}/Apis/github.json`)[e]}if("github"===o){console.log(`#### ENV_GITHUB_OWNER: ${process.env.ENV_GITHUB_OWNER}`),console.log(`#### ENV_GITHUB_REPO: ${process.env.ENV_GITHUB_REPO}`),console.log(`#### ENV_GITHUB_TOKEN: ${process.env.ENV_GITHUB_TOKEN}`);let o={owner:process.env.ENV_GITHUB_OWNER||"",repo:process.env.ENV_GITHUB_REPO||"",token:process.env.ENV_GITHUB_TOKEN||""},i=await (0,t.readJsonFromGithub)("Apis/github.json",o);return console.log(`@@@@ readJsonFromGithub: ${JSON.stringify(i)}`),i[e]}};(async()=>{try{var e;let i,r;let t=await c(n.userName??"","github");t.userName=n.userName??"",console.log(`#### git account: ${JSON.stringify(t)}`);let p=new o.Octokit({auth:t.token}),l=(e=n.repoName??"",(r=(0,a.getCurrentDir)()).split("/").pop()!==e&&(r+=`/${e}`),r??"");switch(n.exec){case"listRepos":try{i=await (0,s.findAllRepos)(p),console.log(JSON.stringify(i,null,2))}catch(e){console.error("저장소 목록 조회 중 오류 발생:",e)}break;case"createRemoteRepo":console.log(`createRemoteRepo: ${n}`),await (0,s.createRemoteRepo)(p,{name:n.repoName??"",description:n.description??"",isPrivate:n.isPrivate??!1});break;case"deleteRemoteRepo":await (0,s.deleteRemoteRepo)(p,{name:n.repoName??""},t);break;case"setLocalConfig":(0,s.setLocalConfig)({name:n.repoName??"",description:n.description??""},t,l);break;case"cloneRepo":(0,s.cloneRepo)({name:n.repoName??"",description:n.description??""},t,l);break;case"initLocalRepo":(0,s.initLocalRepo)({name:n.repoName??"",description:n.description??""},t,l);break;case"initRepo":console.log("====initRepo"),await (0,s.initRepo)(p,{name:n.repoName??"",description:n.description??"",isPrivate:n.isPrivate??!1},t,l);break;case"pushRepo":(0,s.pushRepo)({name:n.repoName??"",description:n.description??""},t,l);break;case"copyRepo":(0,s.copyRepo)({name:n.repoName??"",description:n.description??"description",isPrivate:n.isPrivate??!1},t,l);break;case"makeRepo":await (0,s.makeRepo)(p,{name:n.repoName??"",description:n.description??"",isPrivate:n.isPrivate??!1},t,l);break;case"removeRepo":await (0,s.removeRepo)(p,{name:n.repoName??""},t,l)}}catch(e){console.error("Error:",e),process.exit(1)}})();